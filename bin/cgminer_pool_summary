#!/usr/bin/env ruby

$LOAD_PATH.unshift("#{File.dirname(__FILE__)}/../lib/")

require 'cgminer_api_client'

# helpers
class Array
  def sum
    inject(0.0) { |result, el| result + el }
  end

  def mean
    sum / size
  end
end

# reopen CgminerApiClient::MinerPool and add a summary method
module CgminerApiClient
  class MinerPool
    def to_ferinheight(centigrade)
      (1.8 * centigrade.to_f + 32).round(1)
    end

    def print_summary
      @aggregator = {
        :ghs_avg     => [],
        :ghs_5s      => [],
        :error_rate  => [],
        :temperature => []
      }

      @miners.each do |miner|
        if miner.available?
          summary = miner.summary
          devices = miner.devs

          @aggregator[:ghs_avg] << summary[:ghs_av]
          @aggregator[:ghs_5s]  << summary[:ghs_5s]

          puts "#{miner.host}:#{miner.port}"
          puts "\tGH/s(5s)\t#{summary[:ghs_5s]}"
          puts "\tGH/s(avg)\t#{summary[:ghs_av]}"
          puts "\tDevices\t#{devices.count}"

          devices.each do |device|
            puts "\t\tName\t#{device[:name]}"
            puts "\t\tStatus\t#{device[:status]}"
            puts "\t\tElapsed\t#{device[:device_elapsed] / 60} min"
            puts "\t\tTemp\t#{device[:temperature]} C / #{to_ferinheight(device[:temperature])} F"
            puts "\t\tRej\t#{device[:'device_rejected%']}%"
            puts "\t\tErr\t#{device[:'device_hardware%']}%\n\n"

            @aggregator[:temperature] << device[:temperature]
            @aggregator[:error_rate]  << device[:'device_hardware%']
          end
        end
      end

      puts "============================================="
      puts "\nTotal GH/s"
      puts "\t5s\t#{@aggregator[:ghs_5s].sum.round(1)} (#{(@aggregator[:ghs_5s].mean).round(1)} / miner)"
      puts "\tAvg\t#{@aggregator[:ghs_avg].sum.round(1)} (#{(@aggregator[:ghs_avg].mean).round(1)} / miner)"
      puts "\nError Rate"
      puts "\tAvg\t#{(@aggregator[:error_rate].mean).round(4)}% / miner"
      puts "\tGH/s(5s)\t#{((@aggregator[:error_rate].mean) * @aggregator[:ghs_5s].sum / 100).round(2)}"
      puts "\tGH/s(avg)\t#{((@aggregator[:error_rate].mean) * @aggregator[:ghs_avg].sum / 100).round(2)}"
      puts "\nTemperature"
      puts "\tMin\t#{@aggregator[:temperature].min.round(1)} C / #{to_ferinheight(@aggregator[:temperature].min)} F"
      puts "\tAvg\t#{@aggregator[:temperature].mean.round(1)} C / #{to_ferinheight(@aggregator[:temperature].mean)} F"
      puts "\tMax\t#{@aggregator[:temperature].max.round(1)} C / #{to_ferinheight(@aggregator[:temperature].max)} F"
    end
  end
end

CgminerApiClient::MinerPool.new.print_summary